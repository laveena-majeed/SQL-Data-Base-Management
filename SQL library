-- Drop database if exists
DROP DATABASE IF EXISTS library;

-- Create database named library
CREATE DATABASE library;
USE library;

-- Create Books table
CREATE TABLE Books (
    ISBN VARCHAR(20) PRIMARY KEY,
    Book_title VARCHAR(200),
    Category VARCHAR(50),
    Rental_Price DECIMAL(10, 2),
    Status ENUM('yes', 'no'),
    Author VARCHAR(200),
    Publisher VARCHAR(200)
);

-- Create Branch table
CREATE TABLE Branch (
    Branch_no INT PRIMARY KEY,
    Manager_Id INT,
    Branch_address VARCHAR(100),
    Contact_no VARCHAR(15)
);

-- Create Employee table
CREATE TABLE Employee (
    Emp_Id INT PRIMARY KEY,
    Emp_name VARCHAR(100),
    Position VARCHAR(50),
    Salary DECIMAL(10, 2),
    Branch_no INT,
    FOREIGN KEY (Branch_no) REFERENCES Branch(Branch_no)
);

-- Create Customer table
CREATE TABLE Customer (
    Customer_Id INT PRIMARY KEY,
    Customer_name VARCHAR(100),
    Customer_address VARCHAR(100),
    Reg_date DATE
);

-- Create IssueStatus table
CREATE TABLE IssueStatus (
    Issue_Id INT PRIMARY KEY,
    Issued_cust INT,
    Issued_book_name VARCHAR(200),
    Issue_date DATE,
    Isbn_book VARCHAR(20),
    FOREIGN KEY (Issued_cust) REFERENCES Customer(Customer_Id),
    FOREIGN KEY (Isbn_book) REFERENCES Books(ISBN)
);

-- Create ReturnStatus table
CREATE TABLE ReturnStatus (
    Return_Id INT PRIMARY KEY,
    Return_cust INT,
    Return_book_name VARCHAR(200),
    Return_date DATE,
    Isbn_book2 VARCHAR(20),
    FOREIGN KEY (Return_cust) REFERENCES Customer(Customer_Id),
    FOREIGN KEY (Isbn_book2) REFERENCES Books(ISBN)
);

-- Insert sample data into Books table
INSERT INTO Books (ISBN, Book_title, Category, Rental_Price, Status, Author, Publisher)
VALUES 
    ('ISBN123', 'Book1', 'Fiction', 10.99, 'yes', 'John Smith', 'Publisher A'),
    ('ISBN456', 'Book2', 'Non-Fiction', 12.99, 'no', 'Jane Doe', 'Publisher B'),
    ('ISBN789', 'Book3', 'Mystery', 9.99, 'yes', 'Michael Johnson', 'Publisher C');

-- Insert sample data into Branch table
INSERT INTO Branch (Branch_no, Manager_Id, Branch_address, Contact_no)
VALUES 
    (1, 101, '123 Main St', '123-456-7890'),
    (2, 102, '456 Elm St', '987-654-3210');

-- Insert sample data into Employee table
INSERT INTO Employee (Emp_Id, Emp_name, Position, Salary, Branch_no)
VALUES 
    (101, 'John Doe', 'Manager', 60000.00, 1),
    (102, 'Jane Smith', 'Clerk', 45000.00, 1),
    (103, 'Michael Johnson', 'Librarian', 55000.00, 2);

-- Insert sample data into Customer table
INSERT INTO Customer (Customer_Id, Customer_name, Customer_address, Reg_date)
VALUES 
    (1, 'Alice Brown', '789 Oak St', '2021-12-15'),
    (2, 'Bob Green', '456 Pine St', '2022-02-28'),
    (3, 'Charlie White', '321 Maple St', '2023-01-10');

-- Insert sample data into IssueStatus table
INSERT INTO IssueStatus (Issue_Id, Issued_cust, Issued_book_name, Issue_date, Isbn_book)
VALUES 
    (1, 1, 'Book1', '2022-01-01', 'ISBN123'),
    (2, 2, 'Book2', '2023-06-15', 'ISBN456'),
    (3, 3, 'Book3', '2023-06-20', 'ISBN789');

-- Insert sample data into ReturnStatus table (optional if needed for your application)

-- Queries:

-- 1. Retrieve the book title, category, and rental price of all available books.
SELECT Book_title, Category, Rental_Price FROM Books WHERE Status = 'yes';

-- 2. List the employee names and their respective salaries in descending order of salary.
SELECT Emp_name, Salary FROM Employee ORDER BY Salary DESC;

-- 3. Retrieve the book titles and the corresponding customers who have issued those books.
SELECT b.Book_title, c.Customer_name
FROM IssueStatus i
JOIN Books b ON i.Isbn_book = b.ISBN
JOIN Customer c ON i.Issued_cust = c.Customer_Id;

-- 4. Display the total count of books in each category.
SELECT Category, COUNT(*) AS Total_Count
FROM Books
GROUP BY Category;

-- 5. Retrieve the employee names and their positions for the employees whose salaries are above Rs.50,000.
SELECT Emp_name, Position
FROM Employee
WHERE Salary > 50000;

-- 6. List the customer names who registered before 2022-01-01 and have not issued any books yet.
SELECT Customer_name
FROM Customer
WHERE Reg_date < '2022-01-01'
AND Customer_Id NOT IN (SELECT Issued_cust FROM IssueStatus);

-- 7. Display the branch numbers and the total count of employees in each branch.
SELECT e.Branch_no, COUNT(*) AS Total_Employees
FROM Employee e
GROUP BY e.Branch_no;

-- 8. Display the names of customers who have issued books in the month of June 2023.
SELECT DISTINCT c.Customer_name
FROM IssueStatus i
JOIN Customer c ON i.Issued_cust = c.Customer_Id
WHERE MONTH(i.Issue_date) = 6 AND YEAR(i.Issue_date) = 2023;

-- 9. Retrieve book_title from the book table containing history.
SELECT Book_title
FROM Books
WHERE Category = 'History';

-- 10. Retrieve the branch numbers along with the count of employees for branches having more than 5 employees.
SELECT e.Branch_no, COUNT(*) AS Total_Employees
FROM Employee e
GROUP BY e.Branch_no
HAVING Total_Employees > 5;
